{"version":3,"sources":["../../src/elements/index.js"],"names":["create","createAsync","getAll","supervisor","source","name","element","deploy","elements"],"mappings":";;;;;QAMgBA,M,GAAAA,M;QAMAC,W,GAAAA,W;QAOAC,M,GAAAA,M;;AAnBhB;;;;AACA;;;;;;AAEA,MAAMC,aAAa,0BAAnB;;AAEA;AACO,SAASH,MAAT,CAAgBI,MAAhB,EAAwBC,IAAxB,EAA8B;AACnC,MAAIC,UAAU,sBAAYF,MAAZ,EAAoBC,IAApB,CAAd;AACA,SAAOF,WAAWI,MAAX,CAAkBD,OAAlB,CAAP;AACD;;AAED;AACO,SAASL,WAAT,CAAqBG,MAArB,EAA6BC,IAA7B,EAAmC;AACxC,MAAIC,UAAU,sBAAYF,MAAZ,EAAoBC,IAApB,CAAd;AACAF,aAAWI,MAAX,CAAkBD,OAAlB;;AAEA,SAAOA,OAAP;AACD;;AAEM,SAASJ,MAAT,GAAkB;AACvB,SAAOC,WAAWK,QAAlB;AACD","file":"index.js","sourcesContent":["import Element from './Element'\nimport Supervisor from './Supervisor'\n\nconst supervisor = new Supervisor()\n\n// create element return promise of deployment job\nexport function create(source, name) {\n  let element = new Element(source, name)\n  return supervisor.deploy(element)\n}\n\n// create element, deploy in background and return element\nexport function createAsync(source, name) {\n  let element = new Element(source, name)\n  supervisor.deploy(element)\n\n  return element\n}\n\nexport function getAll() {\n  return supervisor.elements\n}\n"]}