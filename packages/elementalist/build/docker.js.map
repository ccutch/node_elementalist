{"version":3,"sources":["../src/docker.js"],"names":["initDockerSwarm","startDockerRegistry","docker","options","args","filter","Boolean","err","stderr","toString","SWARM_HOST","host","process","env","advertiseAddr"],"mappings":";;;;;QAgBgBA,e,GAAAA,e;QAUAC,mB,GAAAA,mB;;AA1BhB;;;;;;AAEA,MAAMC,SAAS,OAAOC,OAAP,EAAgB,GAAGC,IAAnB,KAA4B;AACzC,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BC,WAAO,CAACD,OAAD,EAAU,GAAGC,IAAb,CAAP;AACAD,cAAU,EAAV;AACD;;AAEDC,SAAOA,KAAKC,MAAL,CAAYC,OAAZ,CAAP;AACA,MAAI;AACF,WAAO,MAAM,iCAAM,QAAN,EAAgBF,IAAhB,EAAsBD,OAAtB,CAAb;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,WAAOA,IAAIC,MAAJ,CAAWC,QAAX,CAAoB,OAApB,CAAP;AACD;AACF,CAZD;;AAcO,SAAST,eAAT,GAA2B;AAChC,MAAI,EAAEU,YAAYC,IAAd,KAAuBC,QAAQC,GAAnC;AACA,MAAIC,gBAAgB,EAApB;AACA,MAAIH,IAAJ,EAAU;AACRG,oBAAgB,CAAC,kBAAD,EAAsB,GAAEH,IAAK,OAA7B,CAAhB;AACD;;AAED,SAAOT,OAAO,OAAP,EAAgB,MAAhB,EAAwB,GAAGY,aAA3B,CAAP;AACD;;AAEM,SAASb,mBAAT,GAA+B;AACpC,SAAOC,OACL,KADK,EAEL,IAFK,EAGL,IAHK,EAIL,WAJK,EAKL,QALK,EAML,UANK,EAOL,YAPK,CAAP;AASD;;kBAEcA,M","file":"docker.js","sourcesContent":["import spawn from 'cross-spawn-promise'\n\nconst docker = async (options, ...args) => {\n  if (typeof options !== 'object') {\n    args = [options, ...args]\n    options = {}\n  }\n\n  args = args.filter(Boolean)\n  try {\n    return await spawn('docker', args, options)\n  } catch (err) {\n    return err.stderr.toString('utf-8')\n  }\n}\n\nexport function initDockerSwarm() {\n  let { SWARM_HOST: host } = process.env\n  let advertiseAddr = []\n  if (host) {\n    advertiseAddr = ['--advertise-addr', `${host}:2377`]\n  }\n\n  return docker('swarm', 'init', ...advertiseAddr)\n}\n\nexport function startDockerRegistry() {\n  return docker(\n    'run',\n    '-d',\n    '-p',\n    '5000:5000',\n    '--name',\n    'registry',\n    'registry:2'\n  )\n}\n\nexport default docker\n"]}