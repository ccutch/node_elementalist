{"version":3,"sources":["../src/elementalist.js"],"names":["bootstrap","elements","state","initDockerSwarm","SWARM_HOST","host","process","env","advertiseAddr","startDockerRegistry","res","console","log","toString","error","exitStatus","stderr"],"mappings":";;;;;;QA8BsBA,S,GAAAA,S;;AA9BtB;;;;AAGA;;IAAYC,Q;;;;;;QACHA,Q,GAAAA,Q;;AAFT;;AAIO,IAAIC,wBAAQ,SAAZ;;AAEP,SAASC,eAAT,GAA2B;AACzB,MAAI,EAAEC,YAAYC,IAAd,KAAuBC,QAAQC,GAAnC;AACA,MAAIC,gBAAgB,EAApB;AACA,MAAIH,IAAJ,EAAU;AACRG,oBAAgB,CAAC,kBAAD,EAAsB,GAAEH,IAAK,OAA7B,CAAhB;AACD;;AAED,SAAO,sBAAO,OAAP,EAAgB,MAAhB,EAAwB,GAAGG,aAA3B,CAAP;AACD;;AAED,SAASC,mBAAT,GAA+B;AAC7B,SAAO,sBACL,KADK,EAEL,IAFK,EAGL,IAHK,EAIL,WAJK,EAKL,QALK,EAML,UANK,EAOL,YAPK,CAAP;AASD;;AAEM,eAAeT,SAAf,GAA2B;AAChC,UAzBSE,KAyBT,WAAQ,cAAR;AACA,MAAI;AACF,QAAIQ,MAAM,MAAMP,iBAAhB;AACAQ,YAAQC,GAAR,CAAYF,IAAIG,QAAJ,CAAa,OAAb,CAAZ;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdH,YAAQC,GAAR,CAAYE,MAAMC,UAAlB,EAA8BD,MAAME,MAAN,CAAaH,QAAb,CAAsB,OAAtB,CAA9B;AACD;;AAED,MAAI;AACF,QAAIH,MAAM,MAAMD,qBAAhB;AACAE,YAAQC,GAAR,CAAYF,IAAIG,QAAJ,CAAa,OAAb,CAAZ;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdH,YAAQC,GAAR,CAAY,0BAAZ;AACD;;AAED,UAxCSV,KAwCT,WAAQ,OAAR;AACD","file":"elementalist.js","sourcesContent":["import docker from './docker'\n\n// submodules\nimport * as elements from './elements'\nexport { elements }\n\nexport let state = 'loading'\n\nfunction initDockerSwarm() {\n  let { SWARM_HOST: host } = process.env\n  let advertiseAddr = []\n  if (host) {\n    advertiseAddr = ['--advertise-addr', `${host}:2377`]\n  }\n\n  return docker('swarm', 'init', ...advertiseAddr)\n}\n\nfunction startDockerRegistry() {\n  return docker(\n    'run',\n    '-d',\n    '-p',\n    '5000:5000',\n    '--name',\n    'registry',\n    'registry:2'\n  )\n}\n\nexport async function bootstrap() {\n  state = 'initializing'\n  try {\n    let res = await initDockerSwarm()\n    console.log(res.toString('utf-8'))\n  } catch (error) {\n    console.log(error.exitStatus, error.stderr.toString('utf-8'))\n  }\n\n  try {\n    let res = await startDockerRegistry()\n    console.log(res.toString('utf-8'))\n  } catch (error) {\n    console.log('registry already running')\n  }\n\n  state = 'ready'\n}\n"]}